package demo;

import org.testng.Assert;

import file.payload;
import io.restassured.path.json.JsonPath;

public class complexjson {

	public static void main(String[] args) {
		
	JsonPath js = new JsonPath(payload.courseprice());

// print no. of courses	

	int count = js.getInt("courses.size()");
	System.out.println(count);
	
	//Print Purchase Amount
	
	int TotalAmount = js.getInt("dashboard.purchaseAmount");
	System.out.println(TotalAmount);
	
	// Print Title of the first course
	
	String firstcoursetitle=js.get("courses[0].title");
	System.out.println(firstcoursetitle);

	 //4. Print All course titles and their respective Prices

	for(int i=0;i<count;i++)
		
	{
		String coursetitles = js.getString("courses["+i+"].title");
		System.out.println(coursetitles);
		int prices =js.getInt("courses["+i+"].price");
		System.out.println(prices);
	}
	// 5. Print no of copies sold by RPA Course



		//print no.of copies sold under RPA
	for(int j=0;j<count;j++)
	{
		String coursetitles = js.getString("courses["+j+"].title");
		if(coursetitles.equals("RPA"))
		{
			int copies = js.get("courses["+j+"].copies");
			System.out.println(copies);
			break;
			
		}
		 //6. Verify if Sum of all Course prices matches with Purchase Amount
		
		
		for(int k=0;k<count;k++)
		{
			int pricess =js.getInt("courses["+k+"].price");
			
		Assert.assertEquals("pricess","dashboard.purchaseAmount" );
	
		//System.out.println(a);
}
	}
	}
}
